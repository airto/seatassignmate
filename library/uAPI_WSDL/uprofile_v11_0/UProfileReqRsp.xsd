<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://www.travelport.com/schema/uprofile_v11_0" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.travelport.com/schema/uprofile_v11_0"
           xmlns:common="http://www.travelport.com/schema/common_v17_0" 
           elementFormDefault="qualified" attributeFormDefault="unqualified">
    <xs:annotation>
        <xs:documentation>(c) Travelport GDS 2008 All rights reserved. Proprietary Information of Travelport GDS.</xs:documentation>
    </xs:annotation>

    <xs:import schemaLocation="../common_v17_0/CommonReqRsp.xsd" namespace="http://www.travelport.com/schema/common_v17_0"/>
    <xs:include schemaLocation="UProfile.xsd"/>

    <!--*** Custom Field Request Types ***-->

    <xs:element name="ProfileCreateFieldReq">
      <xs:annotation>
         <xs:documentation>Creates one or multiple custom fields and/or field groups.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseReq">
               <xs:sequence>
                  <xs:element ref="CreateField" minOccurs="0" maxOccurs="unbounded">
                     <xs:annotation>
                        <xs:documentation>Defines the attributes of a new custom field.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element ref="CreateFieldGroup" minOccurs="0" maxOccurs="unbounded">
                     <xs:annotation>
                        <xs:documentation>Defines the attributes and structure of a new custom field group, and the custom fields that belong to it.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:sequence>
               <xs:attribute name="AgencyID" type="common:typeProfileID" use="required">
                    <xs:annotation>
                        <xs:documentation>The ID of the agency that will own the field(s) and group(s) to be created.</xs:documentation>
                    </xs:annotation>
              </xs:attribute>               
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>   
   <xs:element name="ProfileCreateFieldRsp">
      <xs:annotation>
         <xs:documentation>Response containing details of new fields and/or groups created.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseRsp">
               <xs:sequence>
                  <xs:element ref="Field" minOccurs="0" maxOccurs="unbounded">
                     <xs:annotation>
                        <xs:documentation>Defines a field.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element ref="FieldGroup" minOccurs="0" maxOccurs="unbounded">
                     <xs:annotation>
                        <xs:documentation>Defines a field group.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>   
   
   <xs:element name="ProfileModifyFieldReq">
       <xs:annotation>
           <xs:documentation>Modifies a custom field or field group. Note that some modifications are not permitted once a field or field group is in use (i.e., is associated to a template).</xs:documentation>
       </xs:annotation>
       <xs:complexType>
          <xs:complexContent>
               <xs:extension base="common:BaseReq">
                   <xs:sequence>
                       <xs:element ref="ModifyField" minOccurs="0" maxOccurs="unbounded"/>
                       <xs:element ref="ModifyFieldGroup" minOccurs="0" maxOccurs="unbounded"/>
                   </xs:sequence>
               </xs:extension>
           </xs:complexContent>
       </xs:complexType>
   </xs:element>
   
   
   <xs:element name="ProfileModifyFieldRsp">
       <xs:annotation>
           <xs:documentation>Response reflecting changes made to the custom field or field group.</xs:documentation>
       </xs:annotation>
        <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseRsp">
               <xs:sequence>
                  <xs:element ref="Field" minOccurs="0" maxOccurs="unbounded">
                     <xs:annotation>
                        <xs:documentation>Defines a field.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element ref="FieldGroup" minOccurs="0" maxOccurs="unbounded">
                     <xs:annotation>
                        <xs:documentation>Defines a field group.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>       
   </xs:element>
    
   <!-- *** Hierarchy Request Types *** -->
   
   <xs:element name="ProfileCreateHierarchyLevelReq">
        <xs:annotation>
            <xs:documentation>Request to create a new level within an existing agency or account hierarchy. The template of the hierarchy level will be auto-generated.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseReq">
                    <xs:attribute name="ParentHierarchyLevelID" type="common:typeProfileID" use="optional">
                        <xs:annotation>
                            <xs:documentation>System-assigned, unique hierarchy level ID of the immediate parent of this hiearchy level. Required unless profile type is AgencyGroup.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ProfileType" type="typeCreateHierarchyLevel" use="required">
                        <xs:annotation>
                            <xs:documentation>The type of profile this hierarchy level corresponds to. Limited to AgencyGroup, BranchGroup and TravelerGroup.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="Name" type="typeHierarchyName" use="required">
                        <xs:annotation>
                            <xs:documentation>Name of this level of the hierarchy.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="Description" type="common:StringLength1to255">
                        <xs:annotation>
                            <xs:documentation>A brief description of this hierarchy level.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="ProfileCreateHierarchyLevelRsp">
        <xs:annotation>
            <xs:documentation>Response with the requested hierarchy structure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseRsp">
                    <xs:sequence>
                        <xs:element ref="HierarchyLevel" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="ProfileDeleteHierarchyLevelReq">
        <xs:annotation>
             <xs:documentation>Request to delete an existing Group level of an agency or account hierarchy. Only permitted if no profiles exist for the level.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseReq">
                    <xs:attributeGroup ref="attrsDeleteHierarchyID"/>
                   </xs:extension>
               </xs:complexContent>
            </xs:complexType>
   </xs:element>
   
   <xs:element name="ProfileDeleteHierarchyLevelRsp">
        <xs:annotation>
            <xs:documentation>Response with the updated hierarchy structure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseRsp">
                    <xs:sequence>
                        <xs:element ref="HierarchyLevel" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
   </xs:element>
   
   <xs:element name="ProfileModifyHierarchyLevelReq">
      <xs:annotation>
         <xs:documentation>Request to modify an existing level within an agency or account hierarchy. </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseReq">            
               <xs:attributeGroup ref="attrsHierarchyID"/>
               <xs:attribute name="Name" type="typeHierarchyName">
                  <xs:annotation>
                     <xs:documentation>Name of this level of the hierarchy.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
               <xs:attribute name="Description" type="common:StringLength1to255">
                  <xs:annotation>
                     <xs:documentation>A brief description of this hierarchy level.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
               <xs:attribute name="ParentHierarchyLevelID" type="typeID" use="optional">
                  <xs:annotation>
                     <xs:documentation>To swap the order of two Group levels, specify the new parent of this level. Only Group levels can be reassigned, and can only move up or down one location in the overall hierarchy.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element> 
   
   
   
   <xs:element name="ProfileModifyHierarchyLevelRsp">
      <xs:annotation>
       <xs:documentation>Response with the newly modified hierarchy level.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
       <xs:complexContent>
        <xs:extension base="common:BaseRsp">
         <xs:sequence>
          <xs:element ref="HierarchyLevel" maxOccurs="unbounded"/>
         </xs:sequence>
        </xs:extension>
       </xs:complexContent>
      </xs:complexType>
    </xs:element> 
    
    <xs:element name="ProfileRetrieveHierarchyReq">
      <xs:annotation>
         <xs:documentation>Request to retrieve the superset of profile levels within an agency,agency group or an account.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseReq">
               <xs:choice>
                  <xs:element name="ProfileID" type="common:typeProfileID">
                     <xs:annotation>
                        <xs:documentation>Agency,AgencyGroup or Account in which the hierarchy is created.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="AgencyCode" type="common:typeProvisioningCode">
                     <xs:annotation>
                        <xs:documentation>Specify the AgencyCode Of the Agency in which the hierarchy was created.  Accounts and AgencyGroup do not have Provisioning IDs</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
    
   <xs:element name="ProfileRetrieveHierarchyRsp">
      <xs:annotation>
            <xs:documentation>Response with the requested hierarchy structure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseRsp">
                    <xs:sequence>
                        <xs:element ref="HierarchyLevel" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="ProfileRetrieveHistoryReq">
        <xs:annotation>
            <xs:documentation>Request to retrieve history for the whole profile, a particular element, or a date range.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseReq">
                    <xs:sequence>
                        <xs:element name="ProfileID" type="common:typeProfileID">
                            <xs:annotation>
                                <xs:documentation>Specify the unique ID of the profile whose history is being retrieved.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element ref="ProfileHistoryRetrieveCriteria" minOccurs="0"/>
                        <xs:element ref="ProfileSearchModifiers" minOccurs="0"/>
                    </xs:sequence>
                    <xs:attribute name="ShowDataUnmasked" type="xs:boolean" default="false">
                        <xs:annotation>
                            <xs:documentation>Set to true to show data unmasked in the profile history retrieve response. Requires special authorization.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="ProfileRetrieveHistoryRsp">
        <xs:annotation>
            <xs:documentation>Response with the profile history filtered as specified in the request.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseRsp">
                    <xs:sequence>
                        <xs:element ref="ProfileHistory"/>
                    </xs:sequence>
                    <xs:attribute name="MoreResults" type="common:typeMoreResults" use="required">
                        <xs:annotation>
                            <xs:documentation>Indicates whether more results are available that match the search parameters.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
   
   <!--*** Custom Templates Request Types ***-->
   
   
   
   <!-- *** Profile Request Types *** -->
   <xs:element name="ProfileCreateReq">
      <xs:annotation>
         <xs:documentation>Creates a new profile.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseReq">
               <xs:sequence>
                  <xs:element name="ProfileParent" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>Most profiles will have a single parent.AgencyGroup Profiles will have no parents and Agency profile may not have a parent.  This data is not returned in the response.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:group ref="ProfileSpecification"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element ref="ProfileData">
                     <xs:annotation>
                        <xs:documentation>Profile data.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element ref="ProfileLink" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>A unidirectional link from one profile to another.</xs:documentation>
                    </xs:annotation>
                  </xs:element>
               </xs:sequence>
               <xs:attribute name="ProfileType" type="typeProfileType" use="required">
                  <xs:annotation>
                     <xs:documentation>The type of the Profile to be created.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
               <xs:attribute name="Status" type="common:typeProfileEntityStatus" use="optional" default="Active">
                  <xs:annotation>
                    <xs:documentation>Status of the profile entity (e.g., Active, Inactive). Any status other than Active implies that the entity cannot perform most transactions.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
               <xs:attribute name="TemplateID" type="typeTemplateID">
                        <xs:annotation>
                            <xs:documentation>The unique ID of the profile template associated to this entity. Cannot be modified after the profile is created.</xs:documentation>
                        </xs:annotation>
               </xs:attribute>
               <xs:attribute name="TemplateVersion" type="common:typeVersion">
                        <xs:annotation>
                            <xs:documentation>The current version number of the template.</xs:documentation>
                        </xs:annotation>
               </xs:attribute>
               <xs:attribute name="HierarchyLevelID" type="typeID">
                  <xs:annotation>
                    <xs:documentation>System-defined, unique identifier of the level in the profile's hierarchy to which this profile is associated.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
               <xs:attribute name="ReturnProfile" type="xs:boolean" use="optional" default="false">
                  <xs:annotation>
                     <xs:documentation>If true, will return basic information with the ProfileData element and its associated data.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   
   <xs:element name="ProfileCreateRsp">
      <xs:annotation>
         <xs:documentation>Response with the newly created profile.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseRsp">
               <xs:sequence>
                  <xs:element ref="Profile"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   
   <xs:element name="ProfileModifyReq">
      <xs:annotation>
         <xs:documentation>Request to add, change, or remove data on a specific profile.  Either ProfileID or ProvisioningCode are mandatory.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseReq">
               <xs:sequence>
                  <xs:group ref="ProfileSpecification"/>
                  <xs:element ref="ProfileModifyCmd" maxOccurs="unbounded"/>
               </xs:sequence>
               <xs:attribute name="Version" type="common:typeVersion" use="required">
                  <xs:annotation>
                     <xs:documentation>Version number of the profile. Required with every modify request.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
               <xs:attribute name="ReturnProfile" type="xs:boolean" use="optional" default="false">
                  <xs:annotation>
                     <xs:documentation>If false will only return basic Profile information, without the updated profile data. If true, will return the entire profile and all its data (including data not modified by this transaction).</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   
   <xs:element name="ProfileModifyRsp">
      <xs:annotation>
         <xs:documentation>Response with the newly modified profile.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseRsp">
               <xs:sequence>
                  <xs:element ref="Profile" minOccurs="0"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   
    <xs:element name="ProfileRetrieveReq">
      <xs:annotation>
         <xs:documentation>Request to retrieve a particular profile. Either the full parent profiles or a summary can also be requested on the response.  Either ProfileID or ProvisioningCode are mandatory.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseReq">
                <xs:sequence>
                   <xs:group ref="ProfileSpecification"/>
                   <xs:element ref="ProfileDataFilter" minOccurs="0"/>
                </xs:sequence>
               <xs:attribute name="ReturnParent" type="xs:boolean">
                  <xs:annotation>
                     <xs:documentation>If true, the response will include profile information from this profile's parents. only inheritable data will be returned.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
               <xs:attribute name="ReturnParentSummary" type="xs:boolean">
                  <xs:annotation>
                     <xs:documentation>If true, the response will include profile summary information from this profile's parents.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>               
               <xs:attribute name="ShowDataUnmasked" type="xs:boolean" default="false">
                        <xs:annotation>
                            <xs:documentation>Set to true to show in the response all data in the requested profile, without masking applied. (Any such data in parent profiles will still be masked.) Requires special authorization.</xs:documentation>
                        </xs:annotation>
               </xs:attribute>
               <xs:attribute name="FullParentHierarchy" type="xs:boolean" default="true">
                        <xs:annotation>
                            <xs:documentation>Set to false to show in the response only the data upto and including Account, for Traveler and TravelerGroup.For Account just it's own Profile will be returned.</xs:documentation>
                        </xs:annotation>
               </xs:attribute>
               <xs:attribute name="ParentID" type="common:typeProfileID">
                  <xs:annotation>
                     <xs:documentation>For traveler profile retrieve, the specific immediate parent from which to return inherited data when ReturnParent is true. Ignored otherwise.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
    
   
    <xs:element name="ProfileRetrieveRsp">
        <xs:annotation>
            <xs:documentation>Response with the profile.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseRsp">
                    <xs:sequence>
                        <xs:element ref="Profile"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="ProfileDeleteReq">
             <xs:annotation>
                      <xs:documentation>Request to delete a particular profile.  Either ProfileID or ProvisioningCode are mandatory. </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                      <xs:complexContent>
                              <xs:extension base="common:BaseReq">
                                      <xs:group ref="ProfileSpecification"/>
                                     	<xs:attribute name="Force" type="xs:boolean" use="optional" default="false">
                    					<xs:annotation>
                        					<xs:documentation>To specify that this is a Force Delete.  With a Force Delete, the profile specified and any children below that profile will be deleted.</xs:documentation>
                    					</xs:annotation>
                						</xs:attribute>                                      
                              </xs:extension>
                      </xs:complexContent>
              </xs:complexType>
      </xs:element>
      <xs:element name="ProfileDeleteRsp">
              <xs:annotation>
                      <xs:documentation>Response will only include warnings if they exist.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                      <xs:complexContent>
                             <xs:extension base="common:BaseRsp"/>
                      </xs:complexContent>
              </xs:complexType>
     </xs:element>
     
     <xs:element name="ProfileSearchReq">
        <xs:annotation>
            <xs:documentation>Request to search for profiles of a specified type, within a specified parent. No more than 5 parameters can be specified for a given search request (in addition to ProfileSearchModifiers and a parent ID and Type). Returns any profiles that match all the parameters specified.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseReq">
                    <xs:sequence>
                        <xs:element ref="ProfileTypeSearch" minOccurs="0"/>
                        <xs:element ref="ProfileSearch" minOccurs="0"/>
                        <xs:element ref="ProfileSearchModifiers" minOccurs="0"/>
                    </xs:sequence>
                    <xs:attribute name="ProfileType" type="typeProfileType" use="required">
                        <xs:annotation>
                            <xs:documentation>Limit the search to specific profile type.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ProfileParentID">
                        <xs:annotation>
                            <xs:documentation>The ID of the profile parent or ancestor to search within.This will be used to constrain the scope of the search to a given account, branch, etc. If none is specified, the system will infer the scope based on the user's permissions and emulation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ReturnParentSummary" type="xs:boolean" default="false">
                        <xs:annotation>
                            <xs:documentation>If true, the response will include profile summary information from this profile's parents.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="SearchToken" type="common:StringLength1to128">
                        <xs:annotation>
                            <xs:documentation>Search token to retrieve search result from cache, if present.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="ProfileSearchRsp">
        <xs:annotation>
            <xs:documentation>Response with the profile.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseRsp">
                    <xs:sequence>
                        <xs:element ref="ProfileSummary" minOccurs="0" maxOccurs="unbounded"/>              
                        <xs:element ref="ProfileParentSearchSummary" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute name="SearchToken" type="common:StringLength1to128">
                        <xs:annotation>
                            <xs:documentation>Search token generated after caching the results. Use this token in ProfileSearchReq to get the same result back in future profile search calls, if the cache still exists.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="MoreResults" type="common:typeMoreResults" use="required">
                        <xs:annotation>
                            <xs:documentation>Indicates whether more results are available that match the search parameters.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
   
   <!-- *** Agency Request Types ***  -->
   
   
   <!-- *** Branch Request Types ***  -->
   
   
   <!-- *** Agent Request Types ***  -->
   
   
   
   <!-- *** Account Request Types *** -->
   
  
      
  <!-- *** Traveler Request Types ***  --> 
 
  <!-- *** Action Request Types ***  -->
    <xs:element name="ProfileSearchActionReq">
        <xs:annotation>
            <xs:documentation>Get summary of all Action(s) available in the
                system.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseReq">
                    <xs:attribute name="ConsumingSystem" type="common:StringLength1to128" use="required">
                        <xs:annotation>
                            <xs:documentation>Action Consuming System (Universal Desktop, 3rd party system).</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ProfileSearchActionRsp">
        <xs:annotation>
            <xs:documentation>Response containing summary of all retrieved
                action(s).</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseRsp">
                    <xs:sequence>
                        <xs:element ref="ActionSummary" minOccurs="0"
                            maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Summary of each action.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ProfileRetrieveActionReq">
        <xs:annotation>
            <xs:documentation>Retrieves details of specific Action(s).
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseReq">
                    <xs:sequence>
                        <xs:element name="ActionInfo" type="typeActionRef"
                            maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Action to retrieve.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="ProfileRetrieveActionRsp">
        <xs:annotation>
            <xs:documentation>Response containing details of retrieved action(s).
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseRsp">
                    <xs:sequence>
                        <xs:element ref="Action" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Details of each action.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
  
    <xs:element name="ProfileSearchFieldReq">
        <xs:annotation>
            <xs:documentation>Request to retrieve the fields and field groups owned by a specified agency.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseReq">
                    <xs:sequence>
                        <xs:element ref="ProfileSearchModifiers" minOccurs="0"/>
                    </xs:sequence>
                    <xs:attribute name="AgencyID" type="common:typeProfileID" use="required">
                        <xs:annotation>
                            <xs:documentation>The ID of the agency that owns the fields/groups to be retrieved.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>                    
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
   <xs:element name="ProfileSearchFieldRsp">
        <xs:annotation>
            <xs:documentation>Response showing details of the requested field or field group.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseRsp">
                    <xs:sequence>
                        <xs:element ref="Field" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element ref="FieldGroup" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Defines the structure of a field group, which can be based on existing fields and groups (referred to by Id) and/or new fields and groups (referred to by FieldGroupRef or FieldRef and defined in FieldList or FieldGroupList).</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="MoreResults" type="common:typeMoreResults" use="required">
                        <xs:annotation>
                            <xs:documentation>Indicates whether more results are available that match the search parameters.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
   
   <!--*** Custom Tag Request & Response ***-->
   <xs:element name="ProfileCreateTagsReq">
      <xs:annotation>
         <xs:documentation>Request to create tags for an agency.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseReq">
               <xs:sequence>
                  <xs:element name="CreateTag" maxOccurs="15">
                     <xs:annotation>
                        <xs:documentation/>
                     </xs:annotation>
                     <xs:complexType>
                        <xs:attributeGroup ref="attrsTag"/>
                     </xs:complexType>
                  </xs:element>
               </xs:sequence>
               <xs:attribute name="AgencyID" type="common:typeProfileID" use="required">
                  <xs:annotation>
                     <xs:documentation>The ID of the agency that the tags are created for.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   
   <xs:element name="ProfileCreateTagsRsp">
    <xs:annotation>
     <xs:documentation>Response with all the tags for the agency.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
     <xs:complexContent>
      <xs:extension base="common:BaseRsp">
       <xs:sequence>
        <xs:element ref="Tag" maxOccurs="15">
         <xs:annotation>
          <xs:documentation>A tag that belongs to the agency.</xs:documentation>
         </xs:annotation>
        </xs:element>
       </xs:sequence>
      </xs:extension>
     </xs:complexContent>
    </xs:complexType>
   </xs:element>   

   <xs:element name="ProfileDeleteTagReq">
    <xs:annotation>
     <xs:documentation>Request to delete tags.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
     <xs:complexContent>
      <xs:extension base="common:BaseReq">
        <xs:sequence>
          <xs:element ref="TagRef">
               <xs:annotation>
                <xs:documentation>The tag to be deleted</xs:documentation>
              </xs:annotation>
           </xs:element>
        </xs:sequence>
         <xs:attribute name="Override" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>Indicator to override the delete when the tag is "in use" by profiles in the agency.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
      </xs:extension>
     </xs:complexContent>
    </xs:complexType>
   </xs:element> 
    
   <xs:element name="ProfileDeleteTagRsp" type="common:BaseRsp">
      <xs:annotation>
             <xs:documentation>Successful Response that the tag has been deleted.</xs:documentation>
     </xs:annotation>
   </xs:element>

   <xs:element name="ProfileSearchTagsReq">
    <xs:annotation>
     <xs:documentation>Request to retrieve tags for an agency.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
     <xs:complexContent>
      <xs:extension base="common:BaseReq">
       <xs:attribute name="AgencyID" type="common:typeProfileID" use="required">
        <xs:annotation>
         <xs:documentation>The ID of the agency that the tags belong to.</xs:documentation>
        </xs:annotation>
       </xs:attribute>
      </xs:extension>
     </xs:complexContent>
    </xs:complexType>
   </xs:element>
   
   <xs:element name="ProfileSearchTagsRsp">
    <xs:annotation>
     <xs:documentation>Response with all the tags for the agency.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
     <xs:complexContent>
      <xs:extension base="common:BaseRsp">
       <xs:sequence>
        <xs:element ref="Tag" minOccurs="0" maxOccurs="15">
         <xs:annotation>
          <xs:documentation>A tag that belongs to the agency.</xs:documentation>
         </xs:annotation>
        </xs:element>
       </xs:sequence>
      </xs:extension>
     </xs:complexContent>
    </xs:complexType>
   </xs:element>  
   
   <xs:element name="ProfileModifyTagsReq">
      <xs:annotation>
         <xs:documentation>Request to modify tags for an agency.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseReq">
               <xs:sequence>
                    <xs:element ref="ModifyTag" maxOccurs="15"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   
   <xs:element name="ProfileModifyTagsRsp">
      <xs:annotation>
         <xs:documentation>Response with the modified tags.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseRsp">
               <xs:sequence>
                  <xs:element name="Tag" maxOccurs="15">
                     <xs:annotation>
                        <xs:documentation/>
                     </xs:annotation>
                     <xs:complexType>
                        <xs:attributeGroup ref="attrsTagWithID"/>
                     </xs:complexType>
                  </xs:element>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   
   <!--*** Template Request & Response ***-->
   
   <xs:element name="ProfileRetrieveTemplateReq">
        <xs:annotation>
            <xs:documentation>Request to retrieve a profile template.  If version exists, the response will not return the template unless there is a mismatch.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseReq">
                    <xs:sequence>
                        <xs:element name="ConsumingSystem" minOccurs="0" maxOccurs="unbounded" type="common:StringLength1to128">
                            <xs:annotation>
                                <xs:documentation>Filter out actions and endpoints based on the consuming system(s)</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="ID" type="typeTemplateID" use="required">
                        <xs:annotation>
                            <xs:documentation>Unique identifier of the template, defined by the system.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="Version" type="common:typeVersion">
                        <xs:annotation>
                            <xs:documentation>Version number of the template.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ReturnOverrideFieldsOnly" type="xs:boolean" default="false">
                        <xs:annotation>
                            <xs:documentation>Default=false.By default response will return aggregated structure of override plus default template.If passed true, only override fields will be returned.</xs:documentation>
                        </xs:annotation>
                     </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="ProfileRetrieveTemplateRsp">
        <xs:annotation>
            <xs:documentation>Response with profile template data.  If the version on the request matches the most recent template version then the template is not returned.  Otherwise the template is returned.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseRsp">
                    <xs:sequence>
                        <xs:element ref="ProfileTemplate" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    
   <xs:element name="ProfileModifyTemplateReq">
      <xs:annotation>
         <xs:documentation>Request to modify template.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseReq">
               <xs:sequence>
                  <xs:element ref="TemplateModifyCmd" maxOccurs="unbounded"/>
               </xs:sequence>
               <xs:attribute name="ID" type="typeTemplateID" use="required">
                  <xs:annotation>
                     <xs:documentation>Unique identifier of the template, defined by the system.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
               <xs:attribute name="Version" type="common:typeVersion" use="required">
                  <xs:annotation>
                     <xs:documentation>Version number of the template. Required with every modify request.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   
   <xs:element name="ProfileModifyTemplateRsp">
      <xs:annotation>
         <xs:documentation>Response with profile template data.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseRsp">
               <xs:sequence>
                  <xs:element ref="ProfileTemplate"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   
      <xs:element name="ProfileChildSearchReq">
      <xs:annotation>
         <xs:documentation>Request to allow a user to retrieve the immediate children of a given profile.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseReq">
               <xs:sequence>
               <xs:group ref="ProfileSpecification"/>
                <xs:choice minOccurs="0">
                    <xs:element name="OrganizationName" type="common:typeWildcard">
                        <xs:annotation>
                            <xs:documentation>Name of the organization to filter for.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:sequence>
                        <xs:element name="GivenName" type="common:typeWildcard" minOccurs="0"/>
                        <xs:element name="Surname" type="common:typeWildcard" minOccurs="0"/>
                    </xs:sequence>
                  </xs:choice>
                  <xs:element ref="ProfileSearchModifiers" minOccurs="0"/>
               </xs:sequence>
               <xs:attribute name="HierarchyType">
                        <xs:annotation>
                            <xs:documentation>The type of hierarchy in which to search for children. If not specified search result will include profiles of all types.</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                            <xs:restriction base="typeProfileType">
                                <xs:enumeration value="Agency"/>
                                <xs:enumeration value="Account"/>
                            </xs:restriction>
                        </xs:simpleType>
              </xs:attribute>
              <xs:attribute name="IncludeAgentsAndTravelers" type="xs:boolean" default="false">
                        <xs:annotation>
                            <xs:documentation>Indicator to include or exclude Travelers and Agent profiles when doing a this search.  The default is false, no Travelers or Agents will be returned.</xs:documentation>
                        </xs:annotation>
             </xs:attribute>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
    
   <xs:element name="ProfileChildSearchRsp">
      <xs:annotation>
         <xs:documentation>Response to allow a user to retrieve the immediate children of a given profile.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="common:BaseRsp">
               <xs:sequence>
                  <xs:element ref="ProfileChildSummary" minOccurs="0" maxOccurs="unbounded">
                     <xs:annotation>
                        <xs:documentation>Summary of each Profile Child</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:sequence>
               <xs:attribute name="MoreResults" type="common:typeMoreResults" use="required">
                  <xs:annotation>
                     <xs:documentation>Indicates whether more results are available that match the search parameters.</xs:documentation>
                  </xs:annotation>
               </xs:attribute>
               <xs:attribute name="NumberOfChildren" type="xs:int">
                  <xs:annotation>
                     <xs:documentation>Total number of children that the profile searched under has,</xs:documentation>
                  </xs:annotation>
             </xs:attribute>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   
   <xs:element name="ProfileCreateOverrideTemplateReq">
        <xs:annotation>
            <xs:documentation>Request to create a override template.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseReq">
                    <xs:sequence>
                        <xs:element ref="OverrideDefinition" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute name="Name" type="typeTemplateName" use="required">
                        <xs:annotation>
                            <xs:documentation>Name of the override template.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="Description" type="typeTemplateDescription">
                        <xs:annotation>
                            <xs:documentation>Description of override template.  </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="TemplateType" type="typeOverrideTemplateType" use="required">
                        <xs:annotation>
                            <xs:documentation>Profile Type for which override template will be created.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="OwnerProfileID" type="common:typeProfileID" use="required">
                        <xs:annotation>
                            <xs:documentation>Id of the profile which owns the overide template .Can be TravelerGroup ,Account,BranchGroup and Branch.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ReturnOverrideFieldsOnly" type="xs:boolean" default="true">
                        <xs:annotation>
                            <xs:documentation>Default=true.Response will return only overridden  fields in response .If passed false, response will return aggregated structure of override plus default template.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="ProfileCreateOverrideTemplateRsp">
        <xs:annotation>
            <xs:documentation>Response with profile template data.  If the version on the request matches the most recent template version then the template is not returned.  Otherwise the template is returned.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseRsp">
                    <xs:sequence>
                        <xs:element ref="ProfileTemplate" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
	<xs:element name="ProfileModifyOverrideTemplateReq">
		<xs:annotation>
			<xs:documentation>Request to create a override template.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="common:BaseReq">
					<xs:sequence>
						<xs:element ref="InsertOverrideDefinition" minOccurs="0" />
						<xs:element ref="UpdateOverrideDefinition" minOccurs="0" />
						<xs:element ref="DeleteOverrideDefinition" minOccurs="0" maxOccurs="unbounded" />
					</xs:sequence>
					<xs:attribute name="ID" type="typeTemplateID" use="required">
						<xs:annotation>
							<xs:documentation>Unique identifier of the template, defined by the system.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="Version" type="common:typeVersion" use="required">
						<xs:annotation>
							<xs:documentation>Version number of the template. Required with every modify request.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="Name" type="typeTemplateName" use="required">
						<xs:annotation>
							<xs:documentation>Name of the override template.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="Description" type="typeTemplateDescription">
						<xs:annotation>
							<xs:documentation>Description of override template.  </xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="ReturnOverrideFieldsOnly" type="xs:boolean"	default="true">
						<xs:annotation>
							<xs:documentation>Default=true.Response will return only overridden  fields in response .If passed false, response will return aggregated structure of override plus default template.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="ProfileModifyOverrideTemplateRsp">
		<xs:annotation>
			<xs:documentation>Response with profile template data.  If the version on the request matches the most recent template version then the template is not returned.  Otherwise the template is returned.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="common:BaseRsp">
					<xs:sequence>
						<xs:element ref="ProfileTemplate" minOccurs="0" />
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="ProfileDeleteOverrideTemplateReq">
		<xs:annotation>
			<xs:documentation>Request to delete override template.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="common:BaseReq">
					<xs:attribute name="ID" type="typeTemplateID" use="required">
						<xs:annotation>
							<xs:documentation>Unique identifier of the override template.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="ProfileDeleteOverrideTemplateRsp">
		<xs:annotation>
			<xs:documentation>Request to delete override template.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="common:BaseRsp" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
   
   
   <!-- Bridge Branch Request Response  -->
   
   <xs:element name="ProfileRetrieveBridgeBranchesReq">
        <xs:annotation>
            <xs:documentation>Request to retrieve an Agent's Bridge Branch Assignments</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseReq">
                    <xs:choice>
                        <xs:annotation>
                            <xs:documentation>Specify either the profile ID or the user name of the agent.</xs:documentation>
                        </xs:annotation>
                        <xs:element name="AgentID" type="common:typeProfileID">
                            <xs:annotation>
                                <xs:documentation>The system-assigned, unique profile ID of the agent.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="UserName" type="common:StringLength1to128">
                            <xs:annotation>
                                <xs:documentation>The login name of the agent.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="ProfileRetrieveBridgeBranchesRsp">
        <xs:annotation>
            <xs:documentation>Response to retreive an Agent's Bridge Branch Assignments.  Returns the list of bridge branches that the agent is currently assigned to.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseRsp">
                    <xs:sequence>
                        <xs:element ref="BridgeBranch" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute name="AgentID" type="common:typeProfileID" use="required">
                        <xs:annotation>
                            <xs:documentation>The system-assigned, unique profile ID of the agent.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="UserName" type="common:StringLength1to128" use="required">
                        <xs:annotation>
                            <xs:documentation>The login name of the agent.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>   
   
   <xs:element name="ProfileModifyBridgeBranchesReq">
        <xs:annotation>
            <xs:documentation>Request to add or delete an Agent's Bridge Branch Assignments.  The Default branch cannot be modified.  That functionality will only be used in the Profile Create and Modify services.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseReq">
                    <xs:sequence>
                        <xs:choice>
                            <xs:annotation>
                                <xs:documentation>Specify either the profile ID or the user name of the agent.</xs:documentation>
                            </xs:annotation>
                            <xs:element name="AgentID" type="common:typeProfileID">
                                <xs:annotation>
                                    <xs:documentation>The system-assigned, unique profile ID of the agent.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="UserName" type="common:StringLength1to128">
                                <xs:annotation>
                                    <xs:documentation>The login name of the agent.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:choice>
                        <xs:element ref="BridgeBranchCmd" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Command to add or remove a Bridge Branch assignment</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="ProfileModifyBridgeBranchesRsp">
        <xs:annotation>
            <xs:documentation>Response to add or delete an Agent's Bridge Branch Assignments.  Returns the list of bridge branches that the agent is currently assigned to.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="common:BaseRsp">
                    <xs:sequence>
                        <xs:element ref="BridgeBranch" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute name="AgentID" type="common:typeProfileID" use="required">
                        <xs:annotation>
                            <xs:documentation>The system-assigned, unique profile ID of the agent.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="UserName" type="common:StringLength1to128" use="required">
                        <xs:annotation>
                            <xs:documentation>The login name of the agent.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
</xs:schema>    
